import {
  __commonJS
} from "./chunk-76J2PTFD.js";

// node_modules/localstorage-slim/dist/localstorage-slim.js
var require_localstorage_slim = __commonJS({
  "node_modules/localstorage-slim/dist/localstorage-slim.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "object" == typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : "object" == typeof exports ? exports.ls = e() : t.ls = e();
    }(exports, function() {
      return (() => {
        "use strict";
        var t = { d: (e2, r2) => {
          for (var n2 in r2)
            t.o(r2, n2) && !t.o(e2, n2) && Object.defineProperty(e2, n2, { enumerable: true, get: r2[n2] });
        }, o: (t2, e2) => Object.prototype.hasOwnProperty.call(t2, e2) }, e = {};
        t.d(e, { default: () => u });
        const r = (...t2) => {
        }, n = (t2) => null !== t2 && "Object" === t2.constructor.name;
        let o;
        const c = () => {
          if (void 0 !== o)
            return o;
          o = true;
          try {
            localStorage || (o = false);
          } catch {
            o = false;
          }
          return s(), o;
        }, l = String.fromCharCode(0), a = (t2, e2, r2 = true) => r2 ? [...JSON.stringify(t2)].map((t3) => String.fromCharCode(t3.charCodeAt(0) + e2)).join("") : JSON.parse([...t2].map((t3) => String.fromCharCode(t3.charCodeAt(0) - e2)).join("")), p = { ttl: null, encrypt: false, encrypter: a, decrypter: (t2, e2) => a(t2, e2, false), secret: 75 }, s = (t2 = false) => {
          if (!c())
            return false;
          Object.keys(localStorage).forEach((e2) => {
            const r2 = localStorage.getItem(e2);
            if (!r2)
              return;
            let o2;
            try {
              o2 = JSON.parse(r2);
            } catch {
              return;
            }
            n(o2) && l in o2 && (Date.now() > o2.ttl || t2) && localStorage.removeItem(e2);
          });
        }, u = { config: p, set: (t2, e2, n2 = {}) => {
          if (!c())
            return false;
          const o2 = { ...p, ...n2, encrypt: false !== n2.encrypt && (n2.encrypt || p.encrypt), ttl: null === n2.ttl ? null : n2.ttl || p.ttl };
          try {
            const n3 = o2.ttl && !isNaN(o2.ttl) && o2.ttl > 0;
            let c2 = n3 ? { [l]: e2, ttl: Date.now() + 1e3 * o2.ttl } : e2;
            o2.encrypt && (n3 ? c2[l] = (o2.encrypter || r)(c2[l], o2.secret) : c2 = (o2.encrypter || r)(c2, o2.secret)), localStorage.setItem(t2, JSON.stringify(c2));
          } catch {
            return false;
          }
        }, get: (t2, e2 = {}) => {
          if (!c())
            return null;
          const o2 = localStorage.getItem(t2);
          if (!o2)
            return null;
          const a2 = { ...p, ...e2, encrypt: false !== e2.encrypt && (e2.encrypt || p.encrypt), ttl: null === e2.ttl ? null : e2.ttl || p.ttl };
          let s2 = JSON.parse(o2);
          const u2 = n(s2) && l in s2;
          if (a2.decrypt || a2.encrypt)
            try {
              u2 ? s2[l] = (a2.decrypter || r)(s2[l], a2.secret) : s2 = (a2.decrypter || r)(s2, a2.secret);
            } catch {
            }
          return u2 ? Date.now() > s2.ttl ? (localStorage.removeItem(t2), null) : s2[l] : s2;
        }, flush: s, clear: () => {
          if (!c())
            return false;
          localStorage.clear();
        }, remove: (t2) => {
          if (!c())
            return false;
          localStorage.removeItem(t2);
        } };
        return e.default;
      })();
    });
  }
});
export default require_localstorage_slim();
//# sourceMappingURL=localstorage-slim.js.map
